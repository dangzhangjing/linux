#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<errno.h>
int main()
{
   pid_t pid;
   pid = fork();
   if (pid < 0)
   {
     perror("fork failed");
     exit(1);
   }
  if (pid == 0)
   {
     printf("I am child process.\n");       
     printf("I am eexited.\n");
     exit(0);//先让子进程结束
   }
     printf("I am father process.\n");
     sleep(10);//父进程睡眠10s等待子进程退出，又没调用wait()或waitpid()获取其状态
     子进程成为僵尸进程
     printf("father process is exited.\n");
     return 0;
}
